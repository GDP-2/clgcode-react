{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S556370\\\\Desktop\\\\SEM-4\\\\gpd_project\\\\clgcode-react\\\\src\\\\components\\\\FeedsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './FeedPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedsPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showComments, setShowComments] = useState({});\n  const [commentInput, setCommentInput] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [hasRefreshed, setHasRefreshed] = useState(false);\n  const hasPageBeenRefreshed = localStorage.getItem('hasPageBeenRefreshed');\n  const fetchData = async pageNumber => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        console.error('No JWT token found.');\n        return;\n      }\n      const response = await fetch(`/blog/page/get`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pageNumber: pageNumber - 1,\n          noOfRecords: 5\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPosts(data.response);\n        setTotalPages(data.totalPages);\n      } else {\n        console.error('Error fetching data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleSearchInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const filteredPosts = posts.filter(post => post.sub.toLowerCase().includes(searchQuery.toLowerCase()) || post.desc.toLowerCase().includes(searchQuery.toLowerCase()));\n  const handleLike = async postId => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        console.error('No JWT token found.');\n        return;\n      }\n      const response = await fetch(`/blog/like/${postId}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const updatedPosts = posts.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              likes: post.likes + 1\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error('Error liking post:', response.statusText);\n      }\n    } catch (error) {\n      console.error('An error occurred while liking post:', error);\n    }\n  };\n  const handleUnlike = async postId => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        console.error('No JWT token found.');\n        return;\n      }\n      const response = await fetch(`/blog/unlike/${postId}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const updatedPosts = posts.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              unlikes: post.unlikes + 1\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error('Error unliking post:', response.statusText);\n      }\n    } catch (error) {\n      console.error('An error occurred while unliking post:', error);\n    }\n  };\n  const handleShowComments = postId => {\n    setShowComments(prevShowComments => ({\n      ...prevShowComments,\n      [postId]: !prevShowComments[postId]\n    }));\n  };\n  const handleAddComment = async (postId, commentText) => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        console.error('No JWT token found.');\n        return;\n      }\n      const response = await fetch(`/blog/addcomment/${postId}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: commentText\n        }) // Send the comment text\n      });\n\n      if (response.ok) {\n        const updatedPosts = posts.map(post => {\n          if (post.id === postId) {\n            post.comments = Array.isArray(post.comments) ? post.comments : [];\n            post.comments.push({\n              text: commentText\n            });\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n        setCommentInput('');\n      } else {\n        console.error('Error adding comment:', response.statusText);\n      }\n    } catch (error) {\n      console.error('An error occurred while adding comment:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData(currentPage);\n  }, [currentPage]);\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const goToPage = pageNumber => {\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\n      setCurrentPage(pageNumber);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feeds-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Search blogs...\",\n        value: searchQuery,\n        onChange: handleSearchInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this), Array.isArray(filteredPosts) && filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.sub\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"interaction-button\",\n          onClick: () => handleLike(post.id),\n          children: [\"Likes (\", post.likes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"interaction-button\",\n          onClick: () => handleUnlike(post.id),\n          children: [\"Unlikes (\", post.unlikes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"interaction-button\",\n          onClick: () => handleShowComments(post.id),\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"interaction-button\",\n          children: \"Project Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), showComments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-section\",\n        children: [Array.isArray(post.comments) && post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: comment.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment...\",\n          onChange: e => setCommentInput(e.target.value),\n          value: commentInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddComment(post.id, commentInput),\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden-description\",\n        children: post.desc.length > 20 && post.fullDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-created-date\",\n        children: [\"Created on: \", formatDate(post.crtdTme)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToPage(index + 1),\n        className: currentPage === index + 1 ? 'active' : '',\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedsPage, \"w7MWhT1C+yhBGMW56G47KtGeccY=\");\n_c = FeedsPage;\nexport default FeedsPage;\nvar _c;\n$RefreshReg$(_c, \"FeedsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FeedsPage","_s","posts","setPosts","showComments","setShowComments","commentInput","setCommentInput","currentPage","setCurrentPage","totalPages","setTotalPages","searchQuery","setSearchQuery","hasRefreshed","setHasRefreshed","hasPageBeenRefreshed","localStorage","getItem","fetchData","pageNumber","token","console","error","response","fetch","method","headers","Authorization","body","JSON","stringify","noOfRecords","ok","data","json","statusText","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","handleSearchInputChange","e","target","value","filteredPosts","filter","post","sub","toLowerCase","includes","desc","handleLike","postId","updatedPosts","map","id","likes","handleUnlike","unlikes","handleShowComments","prevShowComments","handleAddComment","commentText","text","comments","Array","isArray","push","prevPage","nextPage","goToPage","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","comment","index","length","fullDesc","crtdTme","disabled","from","_","_c","$RefreshReg$"],"sources":["C:/Users/S556370/Desktop/SEM-4/gpd_project/clgcode-react/src/components/FeedsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './FeedPage.css';\r\n\r\nconst FeedsPage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showComments, setShowComments] = useState({});\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [hasRefreshed, setHasRefreshed] = useState(false);\r\n  const hasPageBeenRefreshed = localStorage.getItem('hasPageBeenRefreshed');\r\n  \r\n  const fetchData = async (pageNumber) => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        console.error('No JWT token found.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`/blog/page/get`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          pageNumber: pageNumber-1,\r\n          noOfRecords: 5,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPosts(data.response);\r\n        setTotalPages(data.totalPages);\r\n      } else {\r\n        console.error('Error fetching data:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n    }\r\n  };\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n  const filteredPosts = posts.filter((post) =>\r\n    post.sub.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    post.desc.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        console.error('No JWT token found.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`/blog/like/${postId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedPosts = posts.map((post) => {\r\n          if (post.id === postId) {\r\n            return { ...post, likes: post.likes + 1 };\r\n          }\r\n          return post;\r\n        });\r\n        setPosts(updatedPosts);\r\n      } else {\r\n        console.error('Error liking post:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while liking post:', error);\r\n    }\r\n  };\r\n\r\n  const handleUnlike = async (postId) => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        console.error('No JWT token found.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`/blog/unlike/${postId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedPosts = posts.map((post) => {\r\n          if (post.id === postId) {\r\n            return { ...post, unlikes: post.unlikes + 1 };\r\n          }\r\n          return post;\r\n        });\r\n        setPosts(updatedPosts);\r\n      } else {\r\n        console.error('Error unliking post:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while unliking post:', error);\r\n    }\r\n  };\r\n\r\n  const handleShowComments = (postId) => {\r\n    setShowComments((prevShowComments) => ({\r\n      ...prevShowComments,\r\n      [postId]: !prevShowComments[postId],\r\n    }));\r\n  };\r\n\r\n  const handleAddComment = async (postId, commentText) => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        console.error('No JWT token found.');\r\n        return;\r\n      }\r\n  \r\n      const response = await fetch(`/blog/addcomment/${postId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text: commentText }), // Send the comment text\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const updatedPosts = posts.map((post) => {\r\n          if (post.id === postId) {\r\n            post.comments = Array.isArray(post.comments) ? post.comments : [];\r\n            post.comments.push({ text: commentText });\r\n          }\r\n          return post;\r\n        });\r\n        setPosts(updatedPosts);\r\n        setCommentInput(''); \r\n      } else {\r\n        console.error('Error adding comment:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while adding comment:', error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    fetchData(currentPage); \r\n  }, [currentPage]);\r\n  \r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n  \r\n  const nextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n  \r\n  const goToPage = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"feeds-container\">\r\n    <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-input\"\r\n          placeholder=\"Search blogs...\"\r\n          value={searchQuery}\r\n          onChange={handleSearchInputChange}\r\n        />\r\n        <button className=\"search-button\">Search</button>\r\n      </div>\r\n      {Array.isArray(filteredPosts) &&\r\n        filteredPosts.map((post) => (\r\n          <div className=\"feed-card\" key={post.id}>\r\n          <h2>{post.sub}</h2>\r\n          <p>{post.desc}</p>\r\n\r\n            <div className=\"interaction\">\r\n              <button className=\"interaction-button\" onClick={() => handleLike(post.id)}>\r\n                Likes ({post.likes})\r\n              </button>\r\n              <button className=\"interaction-button\" onClick={() => handleUnlike(post.id)}>\r\n                Unlikes ({post.unlikes})\r\n              </button>\r\n              <button className=\"interaction-button\" onClick={() => handleShowComments(post.id)}>\r\n                Comments\r\n              </button>\r\n              <button className=\"interaction-button\">Project Requests</button>\r\n            </div>\r\n            {showComments[post.id] && (\r\n              <div className=\"comments-section\">\r\n                {Array.isArray(post.comments) &&\r\n                  post.comments.map((comment, index) => (\r\n                    <div key={index} className=\"comment\">\r\n                      {comment.text}\r\n                    </div>\r\n                  ))}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment...\"\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                  value={commentInput}\r\n                />\r\n                <button onClick={() => handleAddComment(post.id, commentInput)}>\r\n                  Add Comment\r\n                </button>\r\n              </div>\r\n            )}\r\n            <div className=\"hidden-description\">\r\n              {post.desc.length > 20 && post.fullDesc}\r\n            </div>\r\n            <div className=\"post-created-date\">\r\n              Created on: {formatDate(post.crtdTme)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      <div className=\"pagination\">\r\n        <button onClick={prevPage} disabled={currentPage === 1}>\r\n          Prev\r\n        </button>\r\n        {Array.from({ length: totalPages }, (_, index) => (\r\n          <button key={index} onClick={() => goToPage(index + 1)}\r\n          className={currentPage === index + 1 ? 'active' : ''}>\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n        <button onClick={nextPage} disabled={currentPage === totalPages}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedsPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}